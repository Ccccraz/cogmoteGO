name: build

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: linux-amd64
            os: ubuntu-latest
          - target: linux-arm64
            os: ubuntu-24.04-arm
          - target: darwin-arm64
            os: macos-latest
          - target: windows-amd64
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install Dependencies on Linux
        if: startsWith(matrix.target, 'linux-')
        run: |
          sudo apt-get update
          sudo apt-get install -y libzmq3-dev pkg-config

      - name: Install Dependencies on macOS
        if: startsWith(matrix.target, 'darwin-')
        run: |
          brew install zeromq

      - name: Export GitHub Actions cache environment variables for vcpkg
        if: startsWith(matrix.target, 'windows-')
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install Dependencies on Windows
        if: startsWith(matrix.target, 'windows-')
        shell: pwsh
        run: vcpkg install
        env:
          VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

      - name: Build and Package on Linux and macOS
        if: startsWith(matrix.target, 'linux-') || startsWith(matrix.target, 'darwin-')
        run: |
          chmod +x ${{ github.workspace }}/scripts/build.sh
          SHORT_SHA=$(git rev-parse --short "${{ github.sha }}")
          ${{ github.workspace }}/scripts/build.sh --ci \
            --version "${{ github.ref_name}}" \
            --commit "$SHORT_SHA"

      - name: Build and Package on Windows
        if: startsWith(matrix.target, 'windows-')
        shell: pwsh
        run: |
          $shortSha = git rev-parse --short "${{ github.sha }}"
          ${{ github.workspace }}\scripts\build.ps1 --ci --version "${{ github.ref_name }}" --commit $shortSha

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-asset-${{ matrix.target }}
          path: dist/
          retention-days: 1
